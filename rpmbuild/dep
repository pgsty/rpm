#!/bin/bash
# set -o pipefail
#==============================================================#
# File      :   dep
# Desc      :   install dependencies for an extension
# Ctime     :   2025-02-09
# Mtime     :   2025-02-09
# Usage     :   dep <extension>
# Author    :   Ruohang Feng (rh@vonng.com)
# License   :   Apache-2.0
#==============================================================#
PROG_NAME="$(basename $0)"
PROG_DIR="$(cd $(dirname $0) && pwd)"
SPEC_DIR="${PROG_DIR}/SPECS"
RPMS_DIR="${PROG_DIR}/RPMS"

#--------------------------------------------------------------#
# Usage
#--------------------------------------------------------------#
# build [nodebug] <extension> <versions...>
# ./build pg_roaringbitmap         13 14 15 16 17
# ./build pgjwt            nodebug 13 14 15 16 17

#--------------------------------------------------------------#
# Log Util
#--------------------------------------------------------------#
# if output is a terminal, setup color alias, else use empty str
if [[ -t 1 ]]; then
    __CN='\033[0m';__CB='\033[0;30m';__CR='\033[0;31m';__CG='\033[0;32m';
    __CY='\033[0;33m';__CB='\033[0;34m';__CM='\033[0;35m';__CC='\033[0;36m';__CW='\033[0;37m';
else
    __CN='';__CB='';__CR='';__CG='';__CY='';__CB='';__CM='';__CC='';__CW='';
fi
function log_info()  { printf "[${__CG} OK ${__CN}] ${__CG}$*${__CN}\n"; }
function log_warn()  { printf "[${__CY}WARN${__CN}] ${__CY}$*${__CN}\n"; }
function log_error() { printf "[${__CR}FAIL${__CN}] ${__CR}$*${__CN}\n"; }
function log_red()   { printf "[${__CR}WARN${__CN}] ${__CR}$*${__CN}\n"; }
function log_debug() { printf "[${__CB}HINT${__CN}] ${__CB}$*${__CN}\n"; }
function log_title() { printf "[${__CG}$1${__CN}] ${__CG}$2${__CN}\n";   }
function log_hint()  { printf "${__CB}$*${__CN}\n"; }
function log_line()  { printf "${__CM}[$*] ===========================================${__CN}\n"; }


#--------------------------------------------------------------#
# ARGS
#--------------------------------------------------------------#
EXTENSION_NAME=$1

#--------------------------------------------------------------#
# Check Spec
#--------------------------------------------------------------#
SPEC_FILE="${SPEC_DIR}/${EXTENSION_NAME}.spec"

if [ -f "${SPEC_FILE}" ]; then
    log_line "${EXTENSION_NAME} spec file"
else
    log_error "rpm spec not found: ${SPEC_FILE}"
    exit 1
fi

#--------------------------------------------------------------#
# Building for each pgmajorversion
#--------------------------------------------------------------#
log_info "install dependencies for ${EXTENSION_NAME}"
sudo dnf builddep -y --define "pgmajorversion 16" SPECS/${EXTENSION_NAME}.spec
